Turbo Assembler	 Version 4.1	    12/20/21 17:42:18	    Page 1
BASE.ASM



      1				     IDEAL
      2
      3	0000			     MODEL small
      4
      5	0000			     STACK 256
      6
      7	      =	30		     start_x equ 30
      8	      =	30		     start_y equ 30
      9	      =	20		     height equ	20
     10	      =	20		     wid equ 20
     11
     12	0100			     DATASEG
     13
     14	0000  00		     side db 0
     15	0001  001E		     x dw start_x
     16	0003  001E		     y dw start_y
     17	0005  2F		     color db 47
     18
     19	0006			     CODESEG
     20
     21	0000			     proc check_arrow
     22	0000  50			     push ax
     23	0001  3C 57			     cmp al, 57h
     24	0003  74 0E			     je	up
     25	0005  3C 41			     cmp al, 41h
     26	0007  74 0F			     je	left
     27	0009  3C 53			     cmp al, 53h
     28	000B  74 10			     je	down
     29	000D  3C 44			     cmp al, 44h
     30	000F  74 11			     je	right
     31	0011  75 14			     jne continue
     32
     33	0013				     up:
     34	0013  C6 06 0000r 00			     mov [side], 0
     35	0018				     left:
     36	0018  C6 06 0000r 01			     mov [side], 1
     37	001D				     down:
     38	001D  C6 06 0000r 02			     mov [side], 2
     39	0022				     right:
     40	0022  C6 06 0000r 03			     mov [side], 3
     41
     42	0027				     continue:
     43
     44	0027  58			     pop ax
     45	0028  C3			     ret
     46	0029			     endp
     47
     48	0029			     proc draw_character
     49	0029  51			     push cx
     50	002A  52			     push dx
     51
     52	002B				     draw_left:
     53	002B  A0 0005r				     mov al, [color]
     54	002E  8B 0E 0001r			     mov cx, [x]
     55	0032  8B 16 0003r			     mov dx, [y]
     56	0036  B4 0C				     mov ah, 0ch
     57	0038  CD 10				     int 10h
Turbo Assembler	 Version 4.1	    12/20/21 17:42:18	    Page 2
BASE.ASM



     58	003A  FF 06 0003r			     inc [y]
     59	003E  83 3E 0003r 32			     cmp [y], start_y +	height
     60	0043  75 E6				     jne draw_left
     61
     62	0045  C7 06 0001r 0032		     mov [x], start_x +	wid
     63	004B				     draw_right:
     64	004B  A0 0005r				     mov al, [color]
     65	004E  8B 0E 0001r			     mov cx, [x]
     66	0052  8B 16 0003r			     mov dx, [y]
     67	0056  B4 0C				     mov ah, 0ch
     68	0058  CD 10				     int 10h
     69	005A  FF 0E 0003r			     dec [y]
     70	005E  83 3E 0003r 1E			     cmp [y], start_y
     71	0063  75 E6				     jne draw_right
     72
     73	0065				     draw_top:
     74	0065  A0 0005r				     mov al, [color]
     75	0068  8B 0E 0001r			     mov cx, [x]
     76	006C  8B 16 0003r			     mov dx, [y]
     77	0070  B4 0C				     mov ah, 0ch
     78	0072  CD 10				     int 10h
     79	0074  FF 0E 0001r			     dec [x]
     80	0078  83 3E 0001r 1E			     cmp [x], start_x
     81	007D  75 E6				     jne draw_top
     82
     83	007F  C7 06 0003r 0032		     mov [y], start_y +	height
     84	0085				     draw_bottom:
     85	0085  A0 0005r				     mov al, [color]
     86	0088  8B 0E 0001r			     mov cx, [x]
     87	008C  8B 16 0003r			     mov dx, [y]
     88	0090  B4 0C				     mov ah, 0ch
     89	0092  CD 10				     int 10h
     90	0094  FF 06 0001r			     inc [x]
     91	0098  83 3E 0001r 32			     cmp [x], start_x +	wid
     92	009D  75 E6				     jne draw_bottom
     93
     94	009F  5A			     pop dx
     95	00A0  59			     pop cx
     96	00A1  C3			     ret
     97	00A2			     endp
     98
     99	00A2			     start:
    100	00A2  B8 0000s			     mov ax, @data
    101	00A5  8E D8			     mov ds, ax
    102
    103	00A7  B8 0013			     mov ax, 13h
    104	00AA  CD 10			     int 10h
    105
    106	00AC  E8 FF7A			     call draw_character
    107
    108	00AF				     mainloop:
    109	00AF  B4 01				     mov ah, 01h
    110	00B1  CD 16				     int 16h
    111	00B3  83 3E 0000 00			     cmp offset	zf, 0h
**Error** BASE.ASM(111)	Undefined symbol: ZF
*Warning* BASE.ASM(111)	Argument needs type override
    112	00B8  74 02				     je	inp
Turbo Assembler	 Version 4.1	    12/20/21 17:42:18	    Page 3
BASE.ASM



    113	00BA  75 F3				     jne mainloop
    114
    115	00BC				     inp:
    116	00BC  E8 FF41				     call check_arrow
    117	00BF  EB EE				     jmp mainloop
    118
    119	00C1			     exit:
    120	00C1  B8 4C00			     mov ax, 4c00h
    121	00C4  CD 21			     int 21h
    122
    123				     END start
Turbo Assembler	 Version 4.1	    12/20/21 17:42:18	    Page 4
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "12/20/21"
??FILENAME			  Text	 "BASE	  "
??TIME				  Text	 "17:42:18"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 _TEXT
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 BASE
@INTERFACE			  Text	 000H
@MODEL				  Text	 2
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
CHECK_ARROW			  Near	 _TEXT:0000
COLOR				  Byte	 DGROUP:0005
CONTINUE			  Near	 _TEXT:0027
DOWN				  Near	 _TEXT:001D
DRAW_BOTTOM			  Near	 _TEXT:0085
DRAW_CHARACTER			  Near	 _TEXT:0029
DRAW_LEFT			  Near	 _TEXT:002B
DRAW_RIGHT			  Near	 _TEXT:004B
DRAW_TOP			  Near	 _TEXT:0065
EXIT				  Near	 _TEXT:00C1
HEIGHT				  Text	 20
INP				  Near	 _TEXT:00BC
LEFT				  Near	 _TEXT:0018
MAINLOOP			  Near	 _TEXT:00AF
RIGHT				  Near	 _TEXT:0022
SIDE				  Byte	 DGROUP:0000
START				  Near	 _TEXT:00A2
START_X				  Text	 30
START_Y				  Text	 30
UP				  Near	 _TEXT:0013
WID				  Text	 20
X				  Word	 DGROUP:0001
Y				  Word	 DGROUP:0003

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  STACK				  16  0100 Para	  Stack	  STACK
  _DATA				  16  0006 Word	  Public  DATA
_TEXT				  16  00C6 Word	  Public  CODE
Turbo Assembler	 Version 4.1	    12/20/21 17:42:18	    Page 5
Error Summary



**Error** BASE.ASM(111)	Undefined symbol: ZF
*Warning* BASE.ASM(111)	Argument needs type override
